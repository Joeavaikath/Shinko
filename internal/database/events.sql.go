// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: events.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createEvent = `-- name: CreateEvent :one

INSERT into action_events(id, created_at, updated_at, executed_at, action_id, comment) 
VALUES (
    gen_random_uuid(),
    NOW(),
    NOW(),
    NOW(),
    $1,
    $2
)
RETURNING id, action_id, executed_at, created_at, updated_at, comment
`

type CreateEventParams struct {
	ActionID uuid.UUID
	Comment  sql.NullString
}

// --- CREATE - START ----
func (q *Queries) CreateEvent(ctx context.Context, arg CreateEventParams) (ActionEvent, error) {
	row := q.db.QueryRowContext(ctx, createEvent, arg.ActionID, arg.Comment)
	var i ActionEvent
	err := row.Scan(
		&i.ID,
		&i.ActionID,
		&i.ExecutedAt,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Comment,
	)
	return i, err
}
